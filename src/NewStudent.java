/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.sql.*;
import Project.ConnectionProvider;
import javax.swing.JOptionPane;



/**
 * Form quản lý thêm sinh viên mới vào hệ thống ký túc xá
 * @author barodev
 */
public class NewStudent extends javax.swing.JFrame {
    
    /**
     * Phương thức xóa hết dữ liệu trong form và load lại danh sách phòng
     * Được gọi sau khi lưu thành công hoặc khi người dùng nhấn nút Clear
     */
    public void clear(){
        jTextField1.setText("");  // Mobile Number - Số điện thoại
        jTextField2.setText("");  // Name - Tên sinh viên
        jTextField3.setText("");  // Father Name - Tên cha
        jTextField4.setText("");  // Mother Name - Tên mẹ
        jTextField5.setText("");  // Permanent Address - Địa chỉ thường trú
        jTextField6.setText("");  // College Name - Tên trường
        jTextField7.setText("");  // Aadhar Number - Số CMND/CCCD
        jTextField8.setText("");  // Email - Địa chỉ email
        jComboBox1.removeAllItems();  // Xóa tất cả items trong combobox
        jButton2.setVisible(true);  // Hiện lại nút Save (có thể bị ẩn khi hết phòng)
        roomNumber();  // Load lại danh sách phòng trống từ database
    }
    /**
     * Phương thức lấy danh sách số phòng còn trống từ database
     * Hiển thị trong ComboBox để sinh viên chọn phòng
     */
    public void roomNumber(){
        int i = 0;  // Biến đếm số phòng trống
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            // Truy vấn lấy các phòng đang hoạt động (activate='Yes') và chưa được đặt (roomStatus='Not Booked')
            ResultSet rs = st.executeQuery("SELECT * FROM room WHERE activate='Yes' AND roomStatus='Not Booked'");
            
            while(rs.next())
            {
                i = 1;  // Đánh dấu có ít nhất 1 phòng trống
                // Thêm số phòng (cột đầu tiên) vào combobox
                jComboBox1.addItem(rs.getString(1));
            }
            
            // Nếu không có phòng trống, ẩn nút Save và thông báo cho người dùng
            if(i == 0){
                jButton2.setVisible(false);
                JOptionPane.showMessageDialog(null, "Không có phòng trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
            
        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Lỗi khi tải danh sách phòng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error in roomNumber(): " + e);
        }
    }
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(NewStudent.class.getName());

    /**
     * Constructor - Khởi tạo form NewStudent
     * Tự động load danh sách phòng trống khi form được tạo
     */
    public NewStudent() {
        initComponents();
        // Thêm listener để load danh sách phòng khi form hiển thị
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
    }
    
    /**
     * Phương thức kiểm tra tính hợp lệ của số điện thoại
     * @param phone Số điện thoại cần kiểm tra
     * @return true nếu hợp lệ (10 số), false nếu không hợp lệ
     */
    private boolean isValidPhone(String phone) {
        // Kiểm tra số điện thoại: chỉ chứa số và có độ dài 10 ký tự (theo DB: VARCHAR(10))
        return phone.matches("\\d{10}");
    }
    
    /**
     * Phương thức kiểm tra tính hợp lệ của email
     * @param email Email cần kiểm tra
     * @return true nếu hợp lệ, false nếu không hợp lệ
     */
    private boolean isValidEmail(String email) {
        // Kiểm tra định dạng email cơ bản
        return email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // Sự kiện khi form được hiển thị - load danh sách phòng trống
    private void formComponentShown(java.awt.event.ComponentEvent evt)
    {
        roomNumber();
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pages background.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(480, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Close all jframe.png"))); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        getContentPane().add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(658, 6, -1, -1));

        jLabel1.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel1.setText("Số điện thoại");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 217, -1));

        jLabel2.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel2.setText("Họ và tên");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 217, 20));

        jLabel3.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel3.setText("Họ và tên bố");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 217, -1));

        jLabel4.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel4.setText("Họ và tên mẹ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 217, -1));

        jLabel5.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel5.setText("Địa chỉ hiện tại");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 217, -1));

        jLabel6.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel6.setText("Mã lớp");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 217, -1));

        jLabel7.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel7.setText("Căn cước");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 217, -1));

        jLabel8.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel8.setText("Mã phòng");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 217, -1));

        jTextField1.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 73, 320, -1));

        jTextField2.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 115, 320, -1));

        jTextField3.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 320, -1));

        jTextField4.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 320, -1));

        jTextField5.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 290, 320, -1));

        jTextField6.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, 320, -1));

        jTextField7.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 320, -1));

        jComboBox1.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 320, -1));

        jButton2.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, -1, -1));

        jButton3.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, -1, -1));

        jLabel10.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel10.setText("Email");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 230, -1));
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 320, -1));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        jLabel11.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pages background.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // Xử lý sự kiện đóng form
        // Đóng form hiện tại (ẩn đi, không thoát toàn bộ ứng dụng)
        setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Xử lý sự kiện khi nhấn nút Save - Lưu thông tin sinh viên mới vào database
        
        // Lấy dữ liệu từ các TextField và ComboBox (theo cấu trúc DB)
        String mobileNo = jTextField1.getText().trim();      // mobileNo - Số điện thoại (Primary Key)
        String name = jTextField2.getText().trim();          // name - Tên sinh viên
        String fatherName = jTextField3.getText().trim();    // father - Tên cha
        String motherName = jTextField4.getText().trim();    // mother - Tên mẹ
        String email = jTextField8.getText().trim();         // email - Địa chỉ email
        String address = jTextField5.getText().trim();       // address - Địa chỉ thường trú
        String college = jTextField6.getText().trim();       // college - Tên trường
        String aadhaar = jTextField7.getText().trim();       //  - Số CMND/CCCD
        String roomNo = (String)jComboBox1.getSelectedItem(); // roomNo - Số phòng
        String status = "Active";                            // status - Trạng thái (mặc định Active)
        
        // BƯỚC 1: Kiểm tra các trường bắt buộc không được để trống
        if(mobileNo.equals("") || name.equals("") || email.equals("") || 
           fatherName.equals("") || motherName.equals("") || address.equals("") || 
           college.equals("") || aadhaar.equals("") || roomNo == null)
        {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ tất cả các trường!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // BƯỚC 2: Kiểm tra tính hợp lệ của số điện thoại (10 chữ số)
        if(!isValidPhone(mobileNo))
        {
            JOptionPane.showMessageDialog(null, "Số điện thoại không hợp lệ! Vui lòng nhập 10 chữ số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jTextField1.requestFocus();  // Focus vào trường số điện thoại
            return;
        }
        
        // BƯỚC 3: Kiểm tra tính hợp lệ của email
        if(!isValidEmail(email))
        {
            JOptionPane.showMessageDialog(null, "Email không hợp lệ! Vui lòng nhập đúng định dạng email.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jTextField8.requestFocus();  // Focus vào trường email
            return;
        }
        
        // BƯỚC 4: Kiểm tra số Aadhaar/CMND/CCCD (9-12 chữ số)
        // CMND cũ: 9 số, CCCD mới: 12 số, Aadhaar (Ấn Độ): 12 số
        if(!aadhaar.matches("\\d{12}"))
        {
            JOptionPane.showMessageDialog(null, "Số CCCD không hợp lệ! Vui lòng nhập 12 chữ số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jTextField7.requestFocus();
            return;
        }
        
        // BƯỚC 5: Thực hiện lưu vào database
        try
        {
            Connection con = ConnectionProvider.getCon();
            
            // Kiểm tra xem số điện thoại đã tồn tại chưa (tránh trùng lặp Primary Key)
            PreparedStatement psCheck = con.prepareStatement("SELECT * FROM student WHERE mobileNo=?");
            psCheck.setString(1, mobileNo);
            ResultSet rsCheck = psCheck.executeQuery();
            
            if(rsCheck.next())
            {
                JOptionPane.showMessageDialog(null, "Số điện thoại này đã được đăng ký!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                jTextField1.requestFocus();
                return;
            }
            
            // Câu lệnh SQL để thêm sinh viên mới vào bảng student (10 cột)
            // Thứ tự: mobileNo, name, father, mother, email, address, college, aadhaar, roomNo, status
            PreparedStatement ps = con.prepareStatement(
                "INSERT INTO student (mobileNo, name, father, mother, email, address, college, aadhaar, roomNo, status) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            );
            ps.setString(1, mobileNo);
            ps.setString(2, name);
            ps.setString(3, fatherName);
            ps.setString(4, motherName);
            ps.setString(5, email);
            ps.setString(6, address);
            ps.setString(7, college);
            ps.setString(8, aadhaar);
            ps.setString(9, roomNo);
            ps.setString(10, status);
            ps.executeUpdate();
            
            // Cập nhật trạng thái phòng thành 'Booked' sau khi sinh viên đặt phòng thành công
            PreparedStatement ps1 = con.prepareStatement("UPDATE room SET roomStatus='Booked' WHERE number=?");
            ps1.setString(1, roomNo);
            ps1.executeUpdate();
            
            // Thông báo thành công và làm sạch form để nhập sinh viên tiếp theo
            JOptionPane.showMessageDialog(null, 
                "Thêm sinh viên thành công!\n" +
                "Tên: " + name + "\n" +
                "Số điện thoại: " + mobileNo + "\n" +
                "Phòng: " + roomNo, 
                "Thành công", 
                JOptionPane.INFORMATION_MESSAGE);
            clear();
            
        }
        catch(SQLException e)
        {
            // Xử lý lỗi SQL (ví dụ: lỗi trùng khóa chính, lỗi foreign key, lỗi kết nối database)
            JOptionPane.showMessageDialog(null, "Lỗi database: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.out.println("SQL Error in jButton2ActionPerformed: " + e);
        }
        catch(Exception e)
        {
            // Xử lý các lỗi khác
            JOptionPane.showMessageDialog(null, "Lỗi: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error in jButton2ActionPerformed: " + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Xử lý sự kiện khi nhấn nút Clear
        // Xóa toàn bộ dữ liệu trong form và load lại danh sách phòng
        clear();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new NewStudent().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
