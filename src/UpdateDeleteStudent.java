/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.sql.*;
import Project.ConnectionProvider;
import javax.swing.JOptionPane;

/**
 * Form quản lý cập nhật và xóa thông tin sinh viên
 * @author barodev
 */
public class UpdateDeleteStudent extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(UpdateDeleteStudent.class.getName());

    /**
     * Constructor - Khởi tạo form UpdateDeleteStudent
     */
    public UpdateDeleteStudent() {
        initComponents();
        loadStatusComboBox();  // Load trạng thái vào ComboBox
        setPlaceholders();     // Thiết lập placeholder cho các TextField
    }
    
    /**
     * Phương thức load danh sách trạng thái vào ComboBox
     */
    private void loadStatusComboBox() {
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Living");    // Đang hoạt động
        jComboBox1.addItem("Leaved");  // Không hoạt động

    }
    
    /**
     * Phương thức thiết lập placeholder cho các TextField
     */
    private void setPlaceholders() {
        // Placeholder mặc định đã được set trong form designer
    }
    
    /**
     * Phương thức xóa dữ liệu trong form
     */
    private void clearForm() {
        jTextField1.setText("");  // Số điện thoại
        jTextField2.setText("");  // Họ và tên
        jTextField3.setText("");  // Họ và tên bố
        jTextField4.setText("");  // Họ và tên mẹ
        jTextField5.setText("");  // Email
        jTextField6.setText("");  // Địa chỉ
        jTextField7.setText("");  // Mã lớp
        jTextField8.setText("");  // Căn cước
        jTextField9.setText("");  // Mã phòng
        jComboBox1.setSelectedIndex(0);  // Trạng thái
        jTextField1.requestFocus();  // Focus vào trường số điện thoại
    }
    
    /**
     * Phương thức tìm kiếm sinh viên theo số điện thoại
     */
    private void searchStudent() {
        String mobileNo = jTextField1.getText().trim();
        
        // Kiểm tra số điện thoại có được nhập không
        if(mobileNo.equals("") || mobileNo.equals("Nhập số điện thoại")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số điện thoại cần tìm!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            jTextField1.requestFocus();
            return;
        }
        
        try {
            Connection con = ConnectionProvider.getCon();
            // Truy vấn tìm sinh viên theo mobileNo (Primary Key)
            PreparedStatement ps = con.prepareStatement("SELECT * FROM student WHERE mobileNo=?");
            ps.setString(1, mobileNo);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()) {
                // Tìm thấy sinh viên - Hiển thị thông tin lên form
                jTextField2.setText(rs.getString("name"));
                jTextField3.setText(rs.getString("father"));
                jTextField4.setText(rs.getString("mother"));
                jTextField5.setText(rs.getString("email"));
                jTextField6.setText(rs.getString("address"));
                jTextField7.setText(rs.getString("college"));
                jTextField8.setText(rs.getString("aadhaar"));
                jTextField9.setText(rs.getString("roomNo"));
                jComboBox1.setSelectedItem(rs.getString("status"));
                
                // Disable trường số điện thoại (không cho sửa Primary Key)
                jTextField1.setEditable(false);
            } else {
                // Không tìm thấy sinh viên
                JOptionPane.showMessageDialog(null, 
                    "Không tìm thấy sinh viên với số điện thoại: " + mobileNo, 
                    "Thông báo", 
                    JOptionPane.INFORMATION_MESSAGE);
                clearForm();
            }
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error in searchStudent: " + e);
        }
    }
    
    /**
     * Phương thức kiểm tra tính hợp lệ của email
     */
    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(480, 150));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, 60, 60));

        jLabel1.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel1.setText("Số điện thoại");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jTextField1.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 305, -1));

        jLabel2.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel2.setText("Họ và tên");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel3.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel3.setText("Họ và tên bố");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel4.setText("Họ và tên mẹ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        jLabel5.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel5.setText("Email");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel6.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel6.setText("Địa chỉ hiện tại");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, -1));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel7.setText("Mã lớp");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel8.setText("Căn cước ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, 20));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel9.setText("Mã phòng");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, -1, -1));

        jLabel10.setFont(new java.awt.Font("SF Pro Text", 1, 15)); // NOI18N
        jLabel10.setText("Trạng thái ");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1, -1));

        jTextField2.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 305, -1));

        jTextField3.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 305, -1));

        jTextField4.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 305, -1));

        jTextField5.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 305, -1));

        jTextField6.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 305, -1));

        jTextField7.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 305, -1));

        jTextField8.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 305, -1));

        jTextField9.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 305, -1));

        jComboBox1.setFont(new java.awt.Font("SF Pro", 1, 15)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 305, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton2.setText("Save");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear.png"))); // NOI18N
        jButton3.setText("Clear");
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, -1, -1));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        jButton4.setText("Delete");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pages background.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 700, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Đóng form
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Xử lý thay đổi trạng thái
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {
        // Khi nhấn Enter trong trường số điện thoại, tự động tìm kiếm
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            searchStudent();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Xử lý sự kiện Update - Cập nhật thông tin sinh viên
        String mobileNo = jTextField1.getText().trim();
        String name = jTextField2.getText().trim();
        String father = jTextField3.getText().trim();
        String mother = jTextField4.getText().trim();
        String email = jTextField5.getText().trim();
        String address = jTextField6.getText().trim();
        String college = jTextField7.getText().trim();
        String aadhaar = jTextField8.getText().trim();
        String roomNo = jTextField9.getText().trim();
        String status = (String)jComboBox1.getSelectedItem();
        
        // Kiểm tra các trường bắt buộc
        if(mobileNo.equals("") || name.equals("") || email.equals("") || 
           father.equals("") || mother.equals("") || address.equals("") || 
           college.equals("") || aadhaar.equals("") || roomNo.equals("") || status == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ tất cả các trường!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Kiểm tra email hợp lệ
        if(!isValidEmail(email)) {
            JOptionPane.showMessageDialog(null, "Email không hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jTextField5.requestFocus();
            return;
        }
        
        // Kiểm tra aadhaar (9-12 chữ số)
        if(!aadhaar.matches("\\d{9,12}")) {
            JOptionPane.showMessageDialog(null, "Số căn cước không hợp lệ! Vui lòng nhập 9-12 chữ số.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            jTextField8.requestFocus();
            return;
        }
        
        try {
            Connection con = ConnectionProvider.getCon();
            
            // Kiểm tra số phòng có tồn tại không
            PreparedStatement psRoom = con.prepareStatement("SELECT * FROM room WHERE number=?");
            psRoom.setString(1, roomNo);
            ResultSet rsRoom = psRoom.executeQuery();
            
            if(!rsRoom.next()) {
                JOptionPane.showMessageDialog(null, "Số phòng không tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            // Lấy thông tin phòng cũ của sinh viên
            PreparedStatement psOldRoom = con.prepareStatement("SELECT roomNo FROM student WHERE mobileNo=?");
            psOldRoom.setString(1, mobileNo);
            ResultSet rsOldRoom = psOldRoom.executeQuery();
            String oldRoomNo = "";
            if(rsOldRoom.next()) {
                oldRoomNo = rsOldRoom.getString("roomNo");
            }
            
            // Cập nhật thông tin sinh viên
            PreparedStatement ps = con.prepareStatement(
                "UPDATE student SET name=?, father=?, mother=?, email=?, address=?, college=?, aadhaar=?, roomNo=?, status=? WHERE mobileNo=?"
            );
            ps.setString(1, name);
            ps.setString(2, father);
            ps.setString(3, mother);
            ps.setString(4, email);
            ps.setString(5, address);
            ps.setString(6, college);
            ps.setString(7, aadhaar);
            ps.setString(8, roomNo);
            ps.setString(9, status);
            ps.setString(10, mobileNo);
            
            int result = ps.executeUpdate();
            
            if(result > 0) {
                // Nếu đổi phòng, cập nhật trạng thái phòng
                if(!oldRoomNo.equals(roomNo)) {
                    // Cập nhật phòng cũ thành Not Booked
                    if(!oldRoomNo.equals("")) {
                        PreparedStatement psUpdateOld = con.prepareStatement("UPDATE room SET roomStatus='Not Booked' WHERE number=?");
                        psUpdateOld.setString(1, oldRoomNo);
                        psUpdateOld.executeUpdate();
                    }
                    
                    // Cập nhật phòng mới thành Booked
                    PreparedStatement psUpdateNew = con.prepareStatement("UPDATE room SET roomStatus='Booked' WHERE number=?");
                    psUpdateNew.setString(1, roomNo);
                    psUpdateNew.executeUpdate();
                }
                
                JOptionPane.showMessageDialog(null, "Cập nhật thông tin sinh viên thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                clearForm();
                jTextField1.setEditable(true);
            }
            
        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi cập nhật: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error in jButton2ActionPerformed: " + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Xử lý sự kiện Clear - Xóa form
        clearForm();
        jTextField1.setEditable(true);
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Xử lý sự kiện Delete - Xóa sinh viên
        String mobileNo = jTextField1.getText().trim();
        
        if(mobileNo.equals("") || mobileNo.equals("Nhập số điện thoại")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số điện thoại sinh viên cần xóa!", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Xác nhận trước khi xóa
        int confirm = JOptionPane.showConfirmDialog(null, 
            "Bạn có chắc chắn muốn xóa sinh viên này?\nHành động này không thể hoàn tác!", 
            "Xác nhận xóa", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        
        if(confirm == JOptionPane.YES_OPTION) {
            try {
                Connection con = ConnectionProvider.getCon();
                
                // Lấy số phòng của sinh viên trước khi xóa
                PreparedStatement psGetRoom = con.prepareStatement("SELECT roomNo FROM student WHERE mobileNo=?");
                psGetRoom.setString(1, mobileNo);
                ResultSet rs = psGetRoom.executeQuery();
                String roomNo = "";
                if(rs.next()) {
                    roomNo = rs.getString("roomNo");
                }
                
                // Xóa sinh viên khỏi database
                PreparedStatement ps = con.prepareStatement("DELETE FROM student WHERE mobileNo=?");
                ps.setString(1, mobileNo);
                int result = ps.executeUpdate();
                
                if(result > 0) {
                    // Cập nhật trạng thái phòng thành Not Booked
                    if(!roomNo.equals("")) {
                        PreparedStatement psRoom = con.prepareStatement("UPDATE room SET roomStatus='Not Booked' WHERE number=?");
                        psRoom.setString(1, roomNo);
                        psRoom.executeUpdate();
                    }
                    
                    JOptionPane.showMessageDialog(null, 
                        "Xóa sinh viên thành công!\nPhòng " + roomNo + " đã được giải phóng.", 
                        "Thành công", 
                        JOptionPane.INFORMATION_MESSAGE);
                    clearForm();
                    jTextField1.setEditable(true);
                } else {
                    JOptionPane.showMessageDialog(null, "Không tìm thấy sinh viên với số điện thoại này!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
                
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, "Lỗi khi xóa: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                System.out.println("Error in jButton4ActionPerformed: " + e);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new UpdateDeleteStudent().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
